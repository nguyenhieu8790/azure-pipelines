# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: build_test
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build 1
    pool:
      name: 'hieunv-pool-01'
    steps:
    - script: |
        hostname
        whoami
        pwd
        ls -al
        rm -f README.md
        sleep 60
      displayName: step1

    - script: |
        ls -al
        rm -f README.md
        sleep 1
      displayName: step2

  - deployment: DeployWeb
    dependsOn: Build
    condition: succeeded()  
    displayName: deploy Web App
    pool:
      name: 'hieunv-pool-01'
    # creates an environment if it doesn't exist
    environment: 'smarthotel-dev'
    strategy:
      # default deployment strategy, more coming...
      runOnce:
        deploy:
          steps:
            - script: echo my first web

  - deployment: DeployApp
    dependsOn: Build
    condition: failed()  
    displayName: deploy Web App
    pool:
      name: 'hieunv-pool-01'
    # creates an environment if it doesn't exist
    environment: 'smarthotel-dev'
    strategy:
      # default deployment strategy, more coming...
      runOnce:
        deploy:
          steps:
            - script: echo my first app

- stage: deploy
  displayName: deploy stage
  jobs:
  - job: deploy
    displayName: deploy 1st appp
    pool:
      name: 'hieunv-pool-01'
    steps:
    - script: echo 123
      displayName: step1
    - script: |
        whoami
        printenv
      displayName: step2

  - job: deploy_fail
    displayName: test fail
    dependsOn: deploy
    condition: failed()
    pool:
      name: 'hieunv-pool-01'
    steps:
    - script: echo test is failed
      displayName: test failed

  - job: deploy_success
    displayName: test success
    dependsOn: deploy
    condition: succeeded()
    pool:
      name: 'hieunv-pool-01'
    steps:
    - script: echo test is success
      displayName: test success
